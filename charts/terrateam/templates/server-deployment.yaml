---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.server.name }}
  labels:
    app: {{ .Values.server.name }}
spec:
  replicas: {{ .Values.server.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.server.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.server.name }}
    spec:
      containers:
        - name: {{ .Values.server.name }}
          image: "{{ .Values.server.image.repository }}:{{ .Values.server.image.tag }}"
          imagePullPolicy: {{ .Values.server.image.pullPolicy }}
          resources:
            limits:
              cpu: "{{ .Values.server.resources.limits.cpu }}"
              memory: "{{ .Values.server.resources.limits.memory}}"
            requests:
              cpu: "{{ .Values.server.resources.requests.cpu }}"
              memory: "{{ .Values.server.resources.requests.memory }}"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
          env:
            - name: "TERRAT_API_BASE"
              value: "https://{{ .Values.server.dns_name }}/api"
            - name: "GITHUB_WEBHOOK_URL_UPDATE"
              value: "{{ .Values.server.github_webhook_url_update }}"
            - name: "SELF_HOSTED_INFRACOST_API_KEY"
              value: "{{ .Values.server.self_hosted_infracost_api_key }}"
            - name: "INFRACOST_PRICING_API_ENDPOINT"
              value: "{{ .Values.server.infracost_pricing_api_endpoint }}"
            - name: "TERRAT_TELEMETRY_LEVEL"
              value: "{{ .Values.server.telemetry_level }}"
            - name: "DB_HOST"
              value: "{{ .Values.server.db_host }}"
            - name: "DB_PORT"
              value: "{{ .Values.server.db_port }}"
            - name: "DB_USER"
              value: "{{ .Values.server.db_user }}"
            - name: "DB_PASS"
              valueFrom:
                secretKeyRef:
                  name: terrateam-db-password
                  key: password
            - name: "DB_NAME"
              value: "{{ .Values.server.db_name }}"
            - name: "GITHUB_WEBHOOK_SECRET"
              valueFrom:
                secretKeyRef:
                  name: terrateam-github-webhook-secret
                  key: secret
            - name: "GITHUB_APP_CLIENT_SECRET"
              valueFrom:
                secretKeyRef:
                  name: terrateam-github-app-client-secret
                  key: secret
            - name: "GITHUB_APP_CLIENT_ID"
              valueFrom:
                secretKeyRef:
                  name: terrateam-github-app-client-id
                  key: id
            - name: "GITHUB_APP_ID"
              valueFrom:
                secretKeyRef:
                  name: terrateam-github-app-id
                  key: id
            - name: "GITHUB_APP_PEM"
              valueFrom:
                secretKeyRef:
                  name: terrateam-github-app-pem
                  key: pem
