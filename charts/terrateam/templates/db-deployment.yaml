---
{{- if .Values.db.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.db.name }}
  {{- with (mergeOverwrite .Values.global.annotations .Values.db.annotations) }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  labels:
    app: {{ .Values.db.name }}
    {{- with (mergeOverwrite .Values.global.labels .Values.db.labels) }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ .Values.db.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.db.name }}
    spec:
      containers:
        - name: {{ .Values.db.name }}
          image: {{ printf "%s:%s" .Values.db.image.repository .Values.db.image.tag }}
          imagePullPolicy: {{ .Values.db.image.pullPolicy }}
          resources:
            limits:
              cpu: {{ .Values.db.resources.limits.cpu }}
              memory: {{ .Values.db.resources.limits.memory }}
            requests:
              cpu: {{ .Values.db.resources.requests.cpu }}
              memory: {{ .Values.db.resources.requests.memory }}
          env:
            - name: "PGDATA"
              value: "/var/lib/postgresql/data/terrateam"
            - name: "POSTGRES_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: terrateam-db-password
                  key: password
            - name: "POSTGRES_DB"
              value: {{ .Values.db.config.databaseName | quote }}
            - name: "POSTGRES_USER"
              value: {{ .Values.db.config.username | quote }}
          ports:
            - name: tcp
              containerPort: {{ .Values.db.config.port | default 5432 }}
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - "pg_isready"
                - "-d"
                - {{ .Values.db.config.databaseName | quote }}
                - "-U"
                - {{ .Values.db.config.username | quote }}
            initialDelaySeconds: 5
            periodSeconds: 10
          volumeMounts:
            - mountPath: /var/lib/postgresql/data/
              name: terrateam-db-data-volume
      volumes:
        - name: {{ .Values.db.pvc.name }}
          persistentVolumeClaim:
            claimName: terrateam-db-data-claim
{{- end -}}
