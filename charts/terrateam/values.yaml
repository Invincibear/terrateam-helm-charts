# These will be applied to all deployed resources, unless overriden
# For example, server.labels will override global.labels
global:
  annotations: {}
  labels: {}

  nodeSelector: {}
  tolerations: []

  affinity: {}
  securityContext: {}
  imagePullSecrets: []


server:
  name: terrateam-server
  replicaCount: 1
  dns_name: ""
  db_host: terrateam-db
  db_port: 5432
  db_user: terrateam
  db_name: terrateam
  github_webhook_url_update: "true"
  self_hosted_infracost_api_key: ""
  infracost_pricing_api_endpoint: ""
  telemetry_level: "anonymous"
  image:
    repository: ghcr.io/terrateamio/terrat-oss
    tag: "latest"
    pullPolicy: Always
  imagePullSecrets: []
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 512Mi
  annotations: {}
  labels: {}
  nodeSelector: {}
  tolerations: []


# For convenience and testing, we include a PostgreSQL database deployment to store Terrateam data.
# You might want to consider a more robust solution hosted by a cloud provider or
# a dedicated PostgreSQL deployment with HA
db:
  # Set to false to use an external PostgreSQL server
  enabled: true

  # The name of the PostgreSQL server pod
  name: terrateam-db

  # These affect the environment variables injected into the PostgreSQL server pod
  config:
    # PostgreSQL uses port 5432 by default
    port: 5432

    # The name of the database to create inside the PostgreSQL server.
    # Remember to update server.db.databaseName with this value
    databaseName: terrateam

    # The name of the admin user to create.
    # Remember to update server.db.username with this value
    username: terrateam

    # The password of the admin user to create is derived from a Kubernetes secret.
    # You can manually create the secret with kubectl, or Terraform it with resource.kubernetes_secret_v1,
    # Or use external-secrets to pull the value from a Vault
    passwordSecretName: terrateam-db-password
    passwordSecretKey: password

  image:
    repository: postgres
    tag: "14.18-alpine"
    pullPolicy: IfNotPresent
  imagePullSecrets: []

  # You may want to tune these depending on how many concurrent runs Terrateam serves
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 512Mi

  # Persistent DB storage settings
  pvc:
    name: terrateam-db-data-claim

    # The size of the PV requested by the PVC to ensure data persistence
    storageSize: 1Gi

    # The name of the StorageClass that provides the PersistentVolume.
    # Most Kubernetes clusters have a "default" StorageClass that is used when unspecified
    storageClassName: ""

    # db.pvc.annotations will be merged with global.annotations & global.db.annotations,
    # and will override global.annotations & global.db.annotations if conflicting
    annotations: {}

    # db.pvc.labels will be merged with global.labels & global.db.labels,
    # and will override global.labels & global.db.labels if conflicting
    labels: {}

  # db.annotations & db.labels will be merged with global.annotations & global.labels,
  # and will override global.annotations & global.labels if conflicting
  annotations: {}
  labels: {}

  nodeSelector: {}
  tolerations: []

  affinity: {}
  securityContext: {}


ingress:
  enabled: false
  name: terrateam-ingress
  className: ""

  annotations: {}
  labels: {}

  nodeSelector: {}
  tolerations: []

  affinity: {}
  securityContext: {}


certificate:
  enabled: false

  annotations: {}
  labels: {}
